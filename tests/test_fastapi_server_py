import unittest
from unittest.mock import MagicMock, patch
from fastapi.testclient import TestClient
import os
import sys

project_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), os.pardir))
sys.path.append(project_dir)
from fastapi_server import app
import config


class TestAPI(unittest.TestCase):

    def setUp(self):
        self.client = TestClient(app)

    def test_merge_and_sign(self):
        with patch("fastapi_server.create_loggers") as mock_create_loggers:
            mock_logger = MagicMock()
            mock_create_loggers.return_value = (mock_logger, mock_logger)

            files = []
            files.append(("files", ("test100_a.jpg", b"test_data1")))
            files.append(("files", ("test100_b", b"test_data2")))
            response = self.client.post(
                "/merge_and_sign",
                files=files,
            )

            self.assertEqual(response.status_code, 200)
            mock_logger.info.assert_called_once_with(
                "Merged file saved: %s", "test100.jpg"
            )


if __name__ == "__main__":
    unittest.main()
